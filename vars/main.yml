---

algernon_version_minor: "{{ algernon_version.split('.')[1] }}"
algernon_version_patch: "{{ algernon_version.split('.')[2] }}"

algernon_install_path: /usr/local/bin/algernon/{{ algernon_version }}

algernon_delegate_to: localhost

algernon_local_tmp_directory: "{{
  lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
  default(lookup('env', 'HOME') ~ '/.cache/ansible/algernon', true) }}/{{ algernon_version }}"

algernon_defaults_config:
  access_log: /var/log/algernon.log
  verbose: false
  debug: false
  # dev: Development mode: Enables Debug mode, uses
  #      regular HTTP, Bolt and sets cache mode "dev".
  # prod: Serve HTTP/2+HTTPS on port 443. Serve regular
  #      HTTP on port 80. Uses /srv/algernon for files.
  #      Disables debug mode. Disables auto-refresh.
  #      Enables server mode. Sets cache to "prod".
  serve_mode: dev
  autorefresh: false
  #  Sets a cache mode. The default is "on".
  #    "on"      - Cache everything.
  #    "dev"     - Everything, except Amber,
  #                Lua, GCSS, Markdown and JSX.
  #    "prod"    - Everything, except Amber and Lua.
  #    "small"   - Like "prod", but only files <= 64KB.
  #    "images"  - Only images (png, jpg, gif, svg).
  #    "off"     - Disable caching.
  cache: "off"
  # Speed up responses by caching os.Stat.
  # Only use if served files will not be removed.
  statcache: false
  redis:
    host: 127.0.0.1
    port: 0
  listen:
    address: 127.0.0.1
    port: 8090
  data_directory: "/var/www/algernon"

go_arch_map:
  i386: '386'
  x86_64: 'amd64'
  aarch64: 'arm64'
  armv7l: 'armv7'
  armv6l: 'armv6'

go_arch: "{{
          go_arch_map[ansible_architecture] |
  default(ansible_architecture) }}"

...
